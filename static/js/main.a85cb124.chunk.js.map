{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h6/hw6.module.css","p2-homeworks/h5/header.module.css","p2-homeworks/h5/pages/error.module.css","p2-homeworks/h7/common/c5-SuperSelect/sSelect.module.css","p2-homeworks/h7/common/c6-SuperRadio/sRadio.module.css","p2-homeworks/h3/hw3.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/superSpan.module.css","p2-homeworks/h5/hw5.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/HW6.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","className","classes","errorBlock","SuperSelect","options","onChange","onChangeOption","restProps","mappedOptions","map","el","i","select","e","currentTarget","value","SuperRadio","type","name","onChangeCallback","o","checked","toUpperCase","radio","arr","HW7","useState","Junior","JuniorPlus","Message","props","avatar","message","time","src","alt","textblock","messageData","HW1","Affair","textColor","affair","priority","affairField","style","color","deleteButton","onClick","deleteAffairCallback","_id","Affairs","data","setFilter","mappedAffairs","a","affairs","defaultAffairs","HW2","setAffairs","filter","filteredAffairs","aff","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","onKeyPressHandler","error","totalUsers","inputClass","s","noerror","inputField","onKeyPress","disabled","Boolean","errorMessage","GreetingContainer","users","addUserCallback","setName","setError","trim","length","key","HW3","setUsers","h3Class","newUsersArr","v1","console","log","SuperInputText","onChangeText","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","HW4","text","setText","showAlert","alert","setChecked","column","blue","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","HW6","editableSpanKey","setValue","hw6Class","undefined","pencil","state","stateAsString","JSON","stringify","localStorage","setItem","saveState","defaultState","getItem","parse","restoreState","PreJunior","PATH","Routes","path","exact","render","to","Header","header","arrow","HW5","main","App","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a85cb124.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs\":\"Affairs_affairs__3zw_M\",\"deleteButton\":\"Affairs_deleteButton__eA62y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"Greeting_inputField__3R7xf\",\"errorMessage\":\"Greeting_errorMessage__Q1avd\",\"error\":\"Greeting_error__3Ismh\",\"noerror\":\"Greeting_noerror__O0FLE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__9ho26\",\"avatar\":\"Message_avatar__2Tnlj\",\"textblock\":\"Message_textblock__3x_YK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__lNY0Z\",\"errorInput\":\"SuperInputText_errorInput__WrFfV\",\"error\":\"SuperInputText_error__1ttBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1w2X9\",\"column\":\"HW4_column__NzHnl\",\"testSpanError\":\"HW4_testSpanError__1Wy4Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3njFc\",\"red\":\"SuperButton_red__LRX6p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3koCE\",\"spanClassName\":\"SuperCheckbox_spanClassName__14GAA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hw6Class\":\"hw6_hw6Class__2P0s6\",\"buttonRotation\":\"hw6_buttonRotation__232KT\",\"pencil\":\"hw6_pencil__3Qw3s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2k0oC\",\"arrow\":\"header_arrow__21xTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorBlock\":\"error_errorBlock__2FPGV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"sSelect_select__mNEXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"sRadio_radio__3GVsA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h3Class\":\"hw3_h3Class__2DzNc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"superSpan_editableSpan__5vYTn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"hw5_main__2OEE3\"};","import React from 'react';\r\n\r\nimport classes from './error.module.css';\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={classes.errorBlock}>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react';\r\nimport classes from './sSelect.module.css';\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: string[],\r\n    onChangeOption?: (option: string) => void,\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options = [],\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options?.map((el, i)=> <option key={i}>{el}</option>); // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e);\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select \r\n            className={classes.select}\r\n            onChange={onChangeCallback} \r\n            {...restProps}>\r\n\r\n                {mappedOptions}\r\n\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport { classicNameResolver } from 'typescript';\r\n\r\nimport classes from './sRadio.module.css';\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e);\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.value);\r\n    };\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( \r\n        <label \r\n            key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                name={name}\r\n                value={o}\r\n                checked={ value === o }\r\n                onChange={onChangeCallback}\r\n            />\r\n            {o.toUpperCase()}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <div className={classes.radio}>\r\n            {mappedOptions}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import React from \"react\";\r\nimport HW7 from \"../../h7/HW7\";\r\n\r\nfunction Junior () {\r\n    return (\r\n        <div>\r\n            <HW7/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Junior;","import React from \"react\";\r\n\r\nfunction JuniorPlus () {\r\n    return (\r\n        <div>\r\n            JuniorPlus\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JuniorPlus;","import React from 'react';\r\nimport classes from './Message.module.css';\r\n\r\ntype MessagePropsType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string,\r\n};\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    const {avatar, name, message, time} = props;\r\n\r\n    return (\r\n        <div  className={classes.message}>\r\n            <div className={classes.avatar}>\r\n                    <img src={avatar} alt=\"user avatar\" />\r\n            </div>\r\n\r\n            <div className={classes.textblock}>\r\n                <div>\r\n                    <div>\r\n                        {name}\r\n                    </div>\r\n\r\n                    <div>\r\n                        {message}\r\n                    </div>\r\n                </div>\r\n                \r\n                <div>\r\n                    {time}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react'\r\nimport Message from './Message'\r\n\r\nconst messageData = {\r\n    avatar: 'https://st4.depositphotos.com/9449108/25247/i/600/depositphotos_252470774-stock-photo-samurai-stands-circled-in-an.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            /> \r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport { AffairType } from './HW2'\r\n\r\nimport classes from './Affairs.module.css';\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};\r\n    \r\n    let textColor;\r\n\r\n    switch(props.affair.priority){\r\n        case 'high':\r\n            textColor = 'rgb(43, 167, 167)';\r\n            break;\r\n        case 'middle':\r\n            textColor = 'yellowgreen';\r\n            break;\r\n        case 'low':\r\n            textColor = 'rgb(84, 84, 204)';\r\n            break;\r\n    };\r\n\r\n    return (\r\n        <div \r\n            className={classes.affairField}\r\n            style={{color: textColor}}>\r\n            show some text\r\n\r\n            <button\r\n                className={classes.deleteButton} \r\n                onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\nimport classes from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const {data, setFilter} = props;\r\n    const mappedAffairs = data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {setFilter('all')}; // need to fix\r\n    const setHigh = () => {setFilter('high')};\r\n    const setMiddle = () => {setFilter('middle')};\r\n    const setLow = () => {setFilter('low')};\r\n\r\n    return (\r\n        <div className={classes.affairs}>\r\n\r\n            <div>\r\n                {mappedAffairs}\r\n            </div>\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'middle' | 'low';\r\nexport type AffairType = {\r\n    _id: number,\r\n    name: string,\r\n    priority: AffairPriorityType, \r\n};\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    switch (filter){\r\n        case 'all':\r\n            return affairs;\r\n        case 'high':\r\n            return affairs.filter(aff => aff.priority === 'high');\r\n        case 'middle':\r\n            return affairs.filter(aff => aff.priority === 'middle');\r\n        case 'low':\r\n            return affairs.filter(aff => aff.priority === 'low');\r\n    };\r\n};\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> | [] => { // need to fix any\r\n    return affairs.filter(aff => aff._id !== _id);\r\n};\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, { ChangeEvent, KeyboardEvent } from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    onKeyPressHandler: (e: KeyboardEvent<HTMLDivElement>) => void\r\n    error: string | null// need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, onKeyPressHandler, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : s.noerror; // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.inputField}>\r\n                <input \r\n                    type='text'\r\n                    className={inputClass}\r\n                    value={name} \r\n                    onChange={setNameCallback}\r\n                    onKeyPress={onKeyPressHandler}/>\r\n                <button \r\n                    onClick={addUser}\r\n                    disabled={Boolean(error)}>add</button>\r\n                <span>{totalUsers}</span>\r\n            </div>\r\n\r\n            <span className={s.errorMessage}>{error}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport { UserType } from './HW3'\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string | null>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => { // need to fix any\r\n        setName(e.currentTarget.value); // need to fix\r\n    }\r\n\r\n    const addUser = () => {\r\n        if (name.trim() !== ''){\r\n            addUserCallback(name);\r\n\r\n            setName('');\r\n\r\n            return;\r\n        }\r\n\r\n        setError('enter correct name!');\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLDivElement>) => {\r\n        setError(null);\r\n\r\n        if (e.key === 'Enter'){\r\n            addUser();\r\n        };\r\n    };\r\n\r\n    const totalUsers = users.length; // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            onKeyPressHandler={onKeyPressHandler}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport { v1 } from 'uuid'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport classes from './hw3.module.css';\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>> ([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        const newUsersArr = [...users, {_id: v1(), name: name}];\r\n\r\n        console.log(newUsersArr);\r\n        setUsers(newUsersArr);// need to fix\r\n    }\r\n\r\n    return (\r\n        <div className={classes.h3Class}>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInputt\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restPropsj\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e);\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\n\r\nimport classes from './superSpan.module.css';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${classes.editableSpan} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nimport classes from './hw6.module.css';\r\n\r\nfunction HW6() {\r\n    const editableSpanKey = 'editable-span-value';\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>(editableSpanKey, value)\r\n    }\r\n    const restore = () => {\r\n        const value = restoreState<string>(editableSpanKey, '');\r\n\r\n        setValue(value)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.hw6Class}>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n\r\n                <div\r\n                    className={classes.pencil}></div>\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\n// type StateType = {\r\n//     x: string\r\n//     y: number\r\n// }\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\n// saveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\n// const state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from '../../h6/HW6'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport Error404 from './pages/Error404'\r\nimport Junior from './pages/Junior'\r\nimport JuniorPlus from './pages/JuniorPlus'\r\nimport PreJunior from './pages/PreJunior'\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus',\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { PATH } from './Routes';\r\n\r\nimport classes from './header.module.css';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={classes.header}>\r\n            <nav>\r\n                <NavLink to={PATH.PRE_JUNIOR}>Pre Junior</NavLink>\r\n                <NavLink to={PATH.JUNIOR}>Junior</NavLink>\r\n                <NavLink to={PATH.JUNIOR_PLUS}>Junior +</NavLink>\r\n                <div className={classes.arrow}>\r\n\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport classes from './hw5.module.css';\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div className={classes.main}>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n                <Header/>\r\n\r\n                <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW5 from '../../../p2-homeworks/h5/HW5'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/* <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/> */}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}
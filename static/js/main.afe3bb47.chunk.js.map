{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","avatar","name","message","time","className","classes","src","alt","textblock","messageData","HW1","Affair","textColor","affair","priority","affairField","style","color","deleteButton","onClick","deleteAffairCallback","_id","Affairs","data","setFilter","mappedAffairs","map","a","affairs","defaultAffairs","HW2","useState","setAffairs","filter","filteredAffairs","aff","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","onKeyPressHandler","error","totalUsers","inputClass","s","noerror","inputField","type","value","onChange","onKeyPress","disabled","Boolean","errorMessage","GreetingContainer","users","addUserCallback","setName","setError","trim","length","e","currentTarget","key","HW3","setUsers","newUsersArr","v1","console","log","SuperInputText","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","alert","setChecked","column","blue","App","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.afe3bb47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs\":\"Affairs_affairs__3zw_M\",\"deleteButton\":\"Affairs_deleteButton__eA62y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"Greeting_inputField__3R7xf\",\"errorMessage\":\"Greeting_errorMessage__Q1avd\",\"error\":\"Greeting_error__3Ismh\",\"noerror\":\"Greeting_noerror__O0FLE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__9ho26\",\"avatar\":\"Message_avatar__2Tnlj\",\"textblock\":\"Message_textblock__3x_YK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__lNY0Z\",\"errorInput\":\"SuperInputText_errorInput__WrFfV\",\"error\":\"SuperInputText_error__1ttBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1w2X9\",\"column\":\"HW4_column__NzHnl\",\"testSpanError\":\"HW4_testSpanError__1Wy4Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3njFc\",\"red\":\"SuperButton_red__LRX6p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3koCE\",\"spanClassName\":\"SuperCheckbox_spanClassName__14GAA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__RwxbP\"};","import React from 'react';\r\nimport classes from './Message.module.css';\r\n\r\ntype MessagePropsType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string,\r\n};\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    const {avatar, name, message, time} = props;\r\n\r\n    return (\r\n        <div  className={classes.message}>\r\n            <div className={classes.avatar}>\r\n                    <img src={avatar} alt=\"user avatar\" />\r\n            </div>\r\n\r\n            <div className={classes.textblock}>\r\n                <div>\r\n                    <div>\r\n                        {name}\r\n                    </div>\r\n\r\n                    <div>\r\n                        {message}\r\n                    </div>\r\n                </div>\r\n                \r\n                <div>\r\n                    {time}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react'\r\nimport Message from './Message'\r\n\r\nconst messageData = {\r\n    avatar: 'https://st4.depositphotos.com/9449108/25247/i/600/depositphotos_252470774-stock-photo-samurai-stands-circled-in-an.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            /> \r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport { AffairType } from './HW2'\r\n\r\nimport classes from './Affairs.module.css';\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};\r\n    \r\n    let textColor;\r\n\r\n    switch(props.affair.priority){\r\n        case 'high':\r\n            textColor = 'rgb(43, 167, 167)';\r\n            break;\r\n        case 'middle':\r\n            textColor = 'yellowgreen';\r\n            break;\r\n        case 'low':\r\n            textColor = 'rgb(84, 84, 204)';\r\n            break;\r\n    };\r\n\r\n    return (\r\n        <div \r\n            className={classes.affairField}\r\n            style={{color: textColor}}>\r\n            show some text\r\n\r\n            <button\r\n                className={classes.deleteButton} \r\n                onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\nimport classes from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const {data, setFilter} = props;\r\n    const mappedAffairs = data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {setFilter('all')}; // need to fix\r\n    const setHigh = () => {setFilter('high')};\r\n    const setMiddle = () => {setFilter('middle')};\r\n    const setLow = () => {setFilter('low')};\r\n\r\n    return (\r\n        <div className={classes.affairs}>\r\n\r\n            <div>\r\n                {mappedAffairs}\r\n            </div>\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'middle' | 'low';\r\nexport type AffairType = {\r\n    _id: number,\r\n    name: string,\r\n    priority: AffairPriorityType, \r\n};\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    switch (filter){\r\n        case 'all':\r\n            return affairs;\r\n        case 'high':\r\n            return affairs.filter(aff => aff.priority === 'high');\r\n        case 'middle':\r\n            return affairs.filter(aff => aff.priority === 'middle');\r\n        case 'low':\r\n            return affairs.filter(aff => aff.priority === 'low');\r\n    };\r\n};\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> | [] => { // need to fix any\r\n    return affairs.filter(aff => aff._id !== _id);\r\n};\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, { ChangeEvent, KeyboardEvent } from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    onKeyPressHandler: (e: KeyboardEvent<HTMLDivElement>) => void\r\n    error: string | null// need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, onKeyPressHandler, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : s.noerror; // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.inputField}>\r\n                <input \r\n                    type='text'\r\n                    className={inputClass}\r\n                    value={name} \r\n                    onChange={setNameCallback}\r\n                    onKeyPress={onKeyPressHandler}/>\r\n                <button \r\n                    onClick={addUser}\r\n                    disabled={Boolean(error)}>add</button>\r\n                <span>{totalUsers}</span>\r\n            </div>\r\n\r\n            <span className={s.errorMessage}>{error}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport { UserType } from './HW3'\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string | null>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => { // need to fix any\r\n        setName(e.currentTarget.value); // need to fix\r\n    }\r\n\r\n    const addUser = () => {\r\n        if (name.trim() !== ''){\r\n            addUserCallback(name);\r\n\r\n            setName('');\r\n\r\n            return;\r\n        }\r\n\r\n        setError('enter correct name!');\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLDivElement>) => {\r\n        setError(null);\r\n\r\n        if (e.key === 'Enter'){\r\n            addUser();\r\n        };\r\n    };\r\n\r\n    const totalUsers = users.length; // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            onKeyPressHandler={onKeyPressHandler}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport { v1 } from 'uuid'\r\nimport GreetingContainer from './GreetingContainer'\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>> ([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        const newUsersArr = [...users, {_id: v1(), name: name}];\r\n\r\n        console.log(newUsersArr);\r\n        setUsers(newUsersArr);// need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInputt\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restPropsj\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e);\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2'\r\nimport HW3 from '../../../p2-homeworks/h3/HW3'\r\nimport HW4 from '../../../p2-homeworks/h4/HW4'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}